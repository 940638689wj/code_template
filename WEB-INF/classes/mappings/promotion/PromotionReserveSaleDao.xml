<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yr.chile.promotion.dao.PromotionReserveSaleDao">

	<!-- 用于select查询公用抽取的列 -->
	<sql id="allColumns">
			p1.Promotion_Id,
			p1.Allow_Pay_Remainder_Start_Time,
			p1.Allow_Pay_Remainder_End_Time,
			p1.Send_Time
	</sql>

	<!-- 新增 -->
	<insert id="insert" parameterType="PromotionReserveSale">
	    INSERT INTO promotion_pre_sale (
			Promotion_Id,
			Allow_Pay_Remainder_Start_Time,
			Allow_Pay_Remainder_End_Time,
			Send_Time
	    ) VALUES (
			#{promotionId},
			#{allowPayRemainderStartTime},
			#{allowPayRemainderEndTime},
			#{sendTime}
	    )
	</insert>
	
	<!-- 修改 -->
	<update id="update" parameterType="PromotionReserveSale">
	   UPDATE promotion_pre_sale SET
	   		Promotion_Id = #{promotionId}, 
	   		Allow_Pay_Remainder_Start_Time = #{allowPayRemainderStartTime}, 
	   		Allow_Pay_Remainder_End_Time = #{allowPayRemainderEndTime},
	   		Send_Time = #{sendTime}
	   WHERE 
			Promotion_Id = #{promotionId}
	</update>
	
	<!-- 根据主键获取 -->
    <select id="get" resultType="PromotionReserveSale" parameterType="int">  
		SELECT
		<include refid="allColumns" />
	     FROM promotion_pre_sale p1
	     WHERE
			p1.Promotion_Id=#{promotionId}
	</select>

	<!-- 返回列表 -->
	<select id="findAllList" resultType="PromotionReserveSale">  
	    select 
		<include refid="allColumns" />
	    from promotion_pre_sale p1
		<if test="order_col != null"> order by p1.${order_col}</if>
	</select>
	
	<!-- 分页返回列表 -->
	<select id="findList" resultType="PromotionReserveSale" parameterType="java.util.HashMap">  
	    select 
			<include refid="allColumns" />
	    from promotion_pre_sale p1
	    where 1=1
		<if test="promotionId != null"> and p1.Promotion_Id = #{promotionId}</if>
		<if test="allowPayRemainderStartTime != null"> and p1.Allow_Pay_Remainder_Start_Time = #{allowPayRemainderStartTime}</if>
		<if test="allowPayRemainderEndTime != null"> and p1.Allow_Pay_Remainder_End_Time = #{allowPayRemainderEndTime}</if>
		<if test="sendTime != null"> and p1.Send_Time = #{sendTime}</if>
		<if test="order_col != null"> order by p1.${order_col}</if>
	</select>
	
	<select id="findPromotionReserveSaleDtoList" resultType="PromotionReserveSaleDTO" parameterType="java.util.HashMap">
	select
		<include refid="allColumns" />
		,p2.Promotion_Name,
		p2.Promotion_Desc,
		p2.Status_Cd,
		p2.Enable_Start_Time as enableStartTime
	from promotion_pre_sale p1
	left join promotion p2 on p1.Promotion_Id = p2.Promotion_Id
	where 1=1
		<if test="promotionId != null"> and p1.Promotion_Id = #{promotionId}</if>
		<if test="isEnableTime != null"> 
			<![CDATA[   
    			and DATE_FORMAT(#{isEnableTime}, '%Y-%m-%d %H:%i:%s') <=  DATE_FORMAT(p2.Enable_End_Time, '%Y-%m-%d %H:%i:%s') 
    		]]>
		</if>
		<if test="notEnableTime!=null and notEnableTime!=''">
    		<![CDATA[   
    			and DATE_FORMAT(#{notEnableTime}, '%Y-%m-%d %H:%i:%s') >  DATE_FORMAT(p2.Enable_End_Time, '%Y-%m-%d %H:%i:%s')
    		]]>
		</if>
		<if test="statusCd != null"> and p2.Status_Cd = #{statusCd}</if>
		<if test="promotionTypeCd != null"> and p2.Promotion_Type_Cd = #{promotionTypeCd}</if>
		<if test="like_name != null"> and p2.Promotion_Name like CONCAT('%',#{like_name},'%')</if>
		<if test="order_col != null"> order by p1.${order_col}</if>
	</select>
	
	<select id="findPromotionReserveSaleDto" resultType="PromotionReserveSaleDTO" parameterType="Integer">
		select
			<include refid="allColumns" />
			,p2.Promotion_Name,
			p2.Promotion_Desc,
			p2.Status_Cd,
			p2.Enable_Start_Time,
			p2.Enable_End_Time,
			p3.Product_Id
		from promotion_pre_sale p1
		left join promotion p2 on p1.Promotion_Id = p2.Promotion_Id
		left join promotion_product_xref p3 on p1.Promotion_Id = p3.Promotion_Id
		where p1.Promotion_Id = #{promotionId}
	</select>
</mapper>
